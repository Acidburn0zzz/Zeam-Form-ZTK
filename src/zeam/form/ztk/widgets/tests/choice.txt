===========================
zeam.form.ztk choice widget
===========================

Simple case
===========

First we need a choice:

  >>> from zope import interface, schema
  >>> from zope.schema.vocabulary import SimpleVocabulary, SimpleTerm

  >>> firstVocabulary = SimpleVocabulary([
  ...     SimpleTerm(value='A', token='a1', title='Letter A'),
  ...     SimpleTerm(value='B', token='b1', title='Letter B'),
  ...     SimpleTerm(value='C', token='c1', title='Letter C')])

  >>> class IFirstChoice(interface.Interface):
  ...     choice = schema.Choice(
  ...         title=u"My Choice",
  ...         source=firstVocabulary)


And we will need a content and a request to test:

  >>> from zope.publisher.browser import TestRequest
  >>> request = TestRequest()

  >>> class FirstContent(object):
  ...    interface.implements(IFirstChoice)
  ...    choice = None
  >>> content = FirstContent()
  >>> content.choice = 'B'


Field
-----

So now you can create a field, and get a choice field:

  >>> from zeam.form.ztk import Fields

  >>> firstChoiceFields = Fields(IFirstChoice)
  >>> firstField = firstChoiceFields['choice']
  >>> firstField
  <ChoiceSchemaField My Choice>
  >>> firstField.source is firstVocabulary
  True


Widget
------

You have an associated widget:

  >>> from zeam.form.ztk import Widgets, FormSubmission

  >>> firstSub = FormSubmission(content, request)
  >>> firstSub.ignoreContent = False

  >>> firstWidgets = Widgets(
  ...     firstChoiceFields,
  ...     form=firstSub,
  ...     request=request)

  >>> firstWidgets.update()

  >>> firstWidget = firstWidgets['form.field.choice']
  >>> firstWidget
  <ChoiceFieldWidget My Choice>

  >>> firstWidget.inputValue()
  'b1'

  >>> print firstWidget.render()
  <select id="form-field-choice" name="form.field.choice">
    <option value="a1">Letter A</option>
    <option value="b1" selected="selected">Letter B</option>
    <option value="c1">Letter C</option>
  </select>


Extractor
---------

We need a custom extractor as the token value used in the form can be
different than the real value:

  >>> from zope import component
  >>> from zeam.form.base import interfaces

  >>> firstExtractor = component.getMultiAdapter(
  ...      (firstField, firstSub, request), interfaces.IWidgetExtractor)

  >>> firstExtractor
  <zeam.form.ztk.widgets.choice.ChoiceWidgetExtractor object at ...>
  >>> firstExtractor.extract()
  (<Marker NO_VALUE>, None)

Let's now do it with a value:

  >>> firstRequest = TestRequest(
  ...         form={firstWidget.identifier: u'a1', })

  >>> firstExtractor = component.getMultiAdapter(
  ...      (firstField, firstSub, firstRequest), interfaces.IWidgetExtractor)

  >>> firstExtractor.extract()
  ('A', None)


Context binded source
=====================

Let's define a source which need the context to produce its values,
and an interface for it:

  >>> from grokcore import component
  >>> from zope.schema.interfaces import IContextSourceBinder

  >>> @component.provider(IContextSourceBinder)
  ... def secondVocabulary(context):
  ...     return firstVocabulary

  >>> class ISecondChoice(interface.Interface):
  ...     choice = schema.Choice(
  ...         title=u"My Choice",
  ...         source=secondVocabulary)

  >>> class SecondContent(object):
  ...    interface.implements(IFirstChoice)
  ...    choice = None
  >>> content = SecondContent()
  >>> content.choice = 'C'


Field
-----

So now you can create a field, and get a choice field:

  >>> from zeam.form.ztk import Fields

  >>> secondChoiceFields = Fields(ISecondChoice)
  >>> secondField = secondChoiceFields['choice']
  >>> secondField
  <ChoiceSchemaField My Choice>
  >>> secondField.source is secondVocabulary
  True


Widget
------

You have an associated widget:

  >>> from zeam.form.ztk import Widgets, FormSubmission

  >>> secondSub = FormSubmission(content, request)
  >>> secondSub.ignoreContent = False

  >>> secondWidgets = Widgets(
  ...     secondChoiceFields,
  ...     form=secondSub,
  ...     request=request)

  >>> secondWidgets.update()

  >>> secondWidget = secondWidgets['form.field.choice']
  >>> secondWidget
  <ChoiceFieldWidget My Choice>

  >>> secondWidget.inputValue()
  'c1'

  >>> print secondWidget.render()
  <select id="form-field-choice" name="form.field.choice">
    <option value="a1">Letter A</option>
    <option value="b1">Letter B</option>
    <option value="c1" selected="selected">Letter C</option>
  </select>
